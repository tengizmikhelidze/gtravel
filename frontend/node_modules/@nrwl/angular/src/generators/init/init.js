"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.angularInitGenerator = void 0;
const tslib_1 = require("tslib");
const cypress_1 = require("@nrwl/cypress");
const devkit_1 = require("@nrwl/devkit");
const jest_1 = require("@nrwl/jest");
const run_tasks_in_serial_1 = require("@nrwl/workspace/src/utilities/run-tasks-in-serial");
const set_default_collection_1 = require("@nrwl/workspace/src/utilities/set-default-collection");
const versions_1 = require("../../utils/versions");
const karma_1 = require("../karma/karma");
function angularInitGenerator(host, options) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        setDefaults(host, options);
        addPostInstall(host);
        const depsTask = updateDependencies(host);
        const unitTestTask = addUnitTestRunner(host, options);
        const e2eTask = addE2ETestRunner(host, options);
        if (!options.skipFormat) {
            yield devkit_1.formatFiles(host);
        }
        return run_tasks_in_serial_1.runTasksInSerial(depsTask, unitTestTask, e2eTask);
    });
}
exports.angularInitGenerator = angularInitGenerator;
function setDefaults(host, options) {
    const workspace = devkit_1.readWorkspaceConfiguration(host);
    workspace.generators = workspace.generators || {};
    workspace.generators['@nrwl/angular:application'] = Object.assign({ style: options.style, linter: options.linter, unitTestRunner: options.unitTestRunner, e2eTestRunner: options.e2eTestRunner }, (workspace.generators['@nrwl/angular:application'] || {}));
    workspace.generators['@nrwl/angular:library'] = Object.assign({ style: options.style, linter: options.linter, unitTestRunner: options.unitTestRunner }, (workspace.generators['@nrwl/angular:library'] || {}));
    workspace.generators['@nrwl/angular:component'] = Object.assign({ style: options.style }, (workspace.generators['@nrwl/angular:component'] || {}));
    devkit_1.updateWorkspaceConfiguration(host, workspace);
    set_default_collection_1.setDefaultCollection(host, '@nrwl/angular');
}
function addPostInstall(host) {
    devkit_1.updateJson(host, 'package.json', (pkgJson) => {
        var _a;
        pkgJson.scripts = (_a = pkgJson.scripts) !== null && _a !== void 0 ? _a : {};
        const command = 'ngcc --properties es2015 browser module main';
        if (!pkgJson.scripts.postinstall) {
            pkgJson.scripts.postinstall = command;
        }
        else if (!pkgJson.scripts.postinstall.includes('ngcc')) {
            pkgJson.scripts.postinstall = `${pkgJson.scripts.postinstall} && ${command}`;
        }
        return pkgJson;
    });
}
function updateDependencies(host) {
    return devkit_1.addDependenciesToPackageJson(host, {
        '@angular/animations': versions_1.angularVersion,
        '@angular/common': versions_1.angularVersion,
        '@angular/compiler': versions_1.angularVersion,
        '@angular/core': versions_1.angularVersion,
        '@angular/forms': versions_1.angularVersion,
        '@angular/platform-browser': versions_1.angularVersion,
        '@angular/platform-browser-dynamic': versions_1.angularVersion,
        '@angular/router': versions_1.angularVersion,
        rxjs: versions_1.rxjsVersion,
        tslib: '^2.0.0',
        'zone.js': '~0.11.4',
    }, {
        '@angular/compiler-cli': versions_1.angularVersion,
        '@angular/language-service': versions_1.angularVersion,
        '@angular-devkit/build-angular': versions_1.angularDevkitVersion,
    });
}
function addUnitTestRunner(host, options) {
    switch (options.unitTestRunner) {
        case "karma" /* Karma */:
            return karma_1.karmaGenerator(host);
        case "jest" /* Jest */:
            devkit_1.addDependenciesToPackageJson(host, {}, {
                'jest-preset-angular': versions_1.jestPresetAngularVersion,
            });
            return jest_1.jestInitGenerator(host, {});
        default:
            return () => { };
    }
}
function addE2ETestRunner(host, options) {
    switch (options.e2eTestRunner) {
        case "protractor" /* Protractor */:
            return devkit_1.addDependenciesToPackageJson(host, {}, {
                protractor: '~7.0.0',
                'jasmine-core': '~3.6.0',
                'jasmine-spec-reporter': '~5.0.0',
                'ts-node': '~9.1.1',
                '@types/jasmine': '~3.6.0',
                '@types/jasminewd2': '~2.0.3',
            });
        case "cypress" /* Cypress */:
            return cypress_1.cypressInitGenerator(host);
        default:
            return () => { };
    }
}
exports.default = angularInitGenerator;
//# sourceMappingURL=init.js.map